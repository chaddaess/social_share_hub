<?php

namespace ContainerCqYfIDS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getKnpu_Oauth2_Provider_GoogleService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'knpu.oauth2.provider.google' shared service.
     *
     * @return \League\OAuth2\Client\Provider\Google
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-client'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Tool'.\DIRECTORY_SEPARATOR.'ArrayAccessorTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-client'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Tool'.\DIRECTORY_SEPARATOR.'GuardedPropertyTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-client'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Tool'.\DIRECTORY_SEPARATOR.'QueryBuilderTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-client'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Provider'.\DIRECTORY_SEPARATOR.'AbstractProvider.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-client'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Tool'.\DIRECTORY_SEPARATOR.'BearerAuthorizationTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'league'.\DIRECTORY_SEPARATOR.'oauth2-google'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Provider'.\DIRECTORY_SEPARATOR.'Google.php';

        return $container->privates['knpu.oauth2.provider.google'] = ($container->privates['knpu.oauth2.provider_factory'] ?? $container->load('getKnpu_Oauth2_ProviderFactoryService'))->createProvider('League\\OAuth2\\Client\\Provider\\Google', ['clientId' => $container->getEnv('OAUTH_GOOGLE_CLIENT_ID'), 'clientSecret' => $container->getEnv('OAUTH_GOOGLE_CLIENT_SECRET')], 'connect_google_check', [], []);
    }
}
